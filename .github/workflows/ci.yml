name: CI

on:
  push:
  pull_request:

jobs:
  sqlite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest
      - name: Run tests (sqlite)
        env:
          DATABASE_URL: sqlite+pysqlite:///:memory:
          USE_PGVECTOR: '0'
          EMAIL_PROVIDER: mock
          PYTHONPATH: backend
        run: pytest -q backend/tests

  postgres:
    runs-on: ubuntu-latest
    services:
      db:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aihub
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest
      - name: Wait for DB
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 2
          done
      - name: Run tests (postgres)
        env:
          DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/aihub
          USE_PGVECTOR: '1'
          EMAIL_PROVIDER: mock
          PYTHONPATH: backend
        run: pytest -q backend/tests/test_e2e.py backend/tests/test_pgvector.py backend/tests/test_sla.py
